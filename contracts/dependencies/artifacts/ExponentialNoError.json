{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"linkReferences": {},
			"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220278a1a622b1fa5fda2420de60c6765cdc53872baf5e9f1aaf5ce41ab4a90cbbf64736f6c634300060c0033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 DUP11 BYTE PUSH3 0x2B1FA5 REVERT LOG2 TIMESTAMP 0xD 0xE6 0xC PUSH8 0x65CDC53872BAF5E9 CALL 0xAA CREATE2 0xCE COINBASE 0xAB 0x4A SWAP1 0xCB 0xBF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
			"sourceMap": "389:6226:0:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"immutableReferences": {},
			"linkReferences": {},
			"object": "6080604052600080fdfea2646970667358221220278a1a622b1fa5fda2420de60c6765cdc53872baf5e9f1aaf5ce41ab4a90cbbf64736f6c634300060c0033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 DUP11 BYTE PUSH3 0x2B1FA5 REVERT LOG2 TIMESTAMP 0xD 0xE6 0xC PUSH8 0x65CDC53872BAF5E9 CALL 0xAA CREATE2 0xCE COINBASE 0xAB 0x4A SWAP1 0xCB 0xBF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
			"sourceMap": "389:6226:0:-:0;;;;;"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "12600",
				"executionCost": "66",
				"totalCost": "12666"
			},
			"internal": {
				"add_(struct ExponentialNoError.Double memory,struct ExponentialNoError.Double memory)": "infinite",
				"add_(struct ExponentialNoError.Exp memory,struct ExponentialNoError.Exp memory)": "infinite",
				"add_(uint256,uint256)": "infinite",
				"add_(uint256,uint256,string memory)": "infinite",
				"div_(struct ExponentialNoError.Double memory,struct ExponentialNoError.Double memory)": "infinite",
				"div_(struct ExponentialNoError.Double memory,uint256)": "infinite",
				"div_(struct ExponentialNoError.Exp memory,struct ExponentialNoError.Exp memory)": "infinite",
				"div_(struct ExponentialNoError.Exp memory,uint256)": "infinite",
				"div_(uint256,struct ExponentialNoError.Double memory)": "infinite",
				"div_(uint256,struct ExponentialNoError.Exp memory)": "infinite",
				"div_(uint256,uint256)": "infinite",
				"div_(uint256,uint256,string memory)": "infinite",
				"fraction(uint256,uint256)": "infinite",
				"greaterThanExp(struct ExponentialNoError.Exp memory,struct ExponentialNoError.Exp memory)": "infinite",
				"isZeroExp(struct ExponentialNoError.Exp memory)": "infinite",
				"lessThanExp(struct ExponentialNoError.Exp memory,struct ExponentialNoError.Exp memory)": "infinite",
				"lessThanOrEqualExp(struct ExponentialNoError.Exp memory,struct ExponentialNoError.Exp memory)": "infinite",
				"mul_(struct ExponentialNoError.Double memory,struct ExponentialNoError.Double memory)": "infinite",
				"mul_(struct ExponentialNoError.Double memory,uint256)": "infinite",
				"mul_(struct ExponentialNoError.Exp memory,struct ExponentialNoError.Exp memory)": "infinite",
				"mul_(struct ExponentialNoError.Exp memory,uint256)": "infinite",
				"mul_(uint256,struct ExponentialNoError.Double memory)": "infinite",
				"mul_(uint256,struct ExponentialNoError.Exp memory)": "infinite",
				"mul_(uint256,uint256)": "infinite",
				"mul_(uint256,uint256,string memory)": "infinite",
				"mul_ScalarTruncate(struct ExponentialNoError.Exp memory,uint256)": "infinite",
				"mul_ScalarTruncateAddUInt(struct ExponentialNoError.Exp memory,uint256,uint256)": "infinite",
				"safe224(uint256,string memory)": "infinite",
				"safe32(uint256,string memory)": "infinite",
				"sub_(struct ExponentialNoError.Double memory,struct ExponentialNoError.Double memory)": "infinite",
				"sub_(struct ExponentialNoError.Exp memory,struct ExponentialNoError.Exp memory)": "infinite",
				"sub_(uint256,uint256)": "infinite",
				"sub_(uint256,uint256,string memory)": "infinite",
				"truncate(struct ExponentialNoError.Exp memory)": "infinite"
			}
		},
		"methodIdentifiers": {}
	},
	"abi": []
}